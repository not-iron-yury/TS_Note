/* -------------------------------------------- */
// Type

/*
Позволяет создавать новые имена для существующих типов, объединять их,
и создавать сложные конструкции с помощью операторов объединения (|) и пересечения (&).
Используется если требуется работать с различными типами данных или создавать сложные комбинации типов.
*/

/* -------------------------------------------- */

// Простой тип:
type MyString = string;

/* -------------------------------------------- */

// Объединение типов:
type StringOrNumber = string | number;

let userId: StringOrNumber; // декларирование кастомного типа

userId = '90';
userId = 10;

/* -------------------------------------------- */

// Сложные типы:
type PersonT = {
  name: string;
  age: number;
  msg: () => string;
};

const dude: PersonT = {
  name: 'Lebovsky',
  age: 50,
  msg() {
    return 'Отличный план!';
  },
};

/* -------------------------------------------- */

//Расширение существующего типа:
type ExtendedPerson = { email: string } & PersonT;
